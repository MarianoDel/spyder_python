!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Alpha	discrete_esay_control_lib_04_con_ALPHA.py	/^Alpha = 3.3 \/ 350.$/;"	v
Aopamp	PID_etapa_potencia_stretcher_01.py	/^Aopamp = 1 + 2200 \/ 1000		#hace que la salida sea aprox. 1V\/1A$/;"	v
Aopamp	stretcher_caracterizacion_etapa_pot.py	/^Aopamp = 1 + 2200 \/ 1000	#hace que la salida sea aprox. 1V\/1A$/;"	v
Aopamp	stretcher_pid01.py	/^Aopamp = 1 + 2200 \/ 1000		#hace que la salida sea aprox. 1V\/1A$/;"	v
Aopamp	stretcher_pid02.py	/^Aopamp = 1 + 2200 \/ 1000		#hace que la salida sea aprox. 1V\/1A$/;"	v
Beta	discrete_esay_control_lib_04_con_ALPHA.py	/^Beta = 350.\/3.3$/;"	v
C	caracterizacion_RC.py	/^C = 1e-6$/;"	v
CT	Tfilter_sympy_01.py	/^CT = 220e-9$/;"	v
Cm	saw_01.py	/^Cm = 1.5e-12$/;"	v
Cm	saw_02.py	/^Cm = 1.5e-12$/;"	v
Cm	saw_03.py	/^Cm = 1.685e-15$/;"	v
Cp	saw_01.py	/^Cp = 1.9e-12$/;"	v
Cp	saw_02.py	/^Cp = 1.9e-12$/;"	v
Cp	saw_03.py	/^Cp = 2.3e-12$/;"	v
D	PID_control_01.py	/^D = (kp * s + ki + (s**2 * kd) \/ (1 + s*Tf)) \/ s$/;"	v
D	PID_control_02.py	/^D = (kp * s + ki + s**2 * kd) \/ s$/;"	v
D	pole_zero_placement_02.py	/^D = num \/ den$/;"	v
D	pole_zero_placement_03.py	/^D = num \/ den$/;"	v
DAX	pandas_test_02.py	/^DAX = web.DataReader(name = '^GDAXI', data_source = 'yahoo', start='2000-1-1')$/;"	v
E	PID_control_01.py	/^E = signal.lti(Enum, Eden)$/;"	v
E	PID_control_01.py	/^E = simplify(D)$/;"	v
Eden	PID_control_01.py	/^Eden = [5.0e-7, 1.0, 0]$/;"	v
Enum	PID_control_01.py	/^Enum = [1.0005e-5, 0.0100005, 1.0]$/;"	v
FlushLog	datalogger.py	/^def FlushLog (data):$/;"	f
Fsampling	caracterizacion_RC.py	/^Fsampling = 20000$/;"	v
Fsampling	stretcher_caracterizacion_etapa_pot.py	/^Fsampling = 1500$/;"	v
G	sympy_test_03.py	/^G=G1*G2$/;"	v
G1	Tfilter_sympy_01.py	/^G1 = (RL * ZT) \/ (Z1 * Z2 + Z1 * RL + Z1 * ZT + ZT * Z2 + ZT * RL)$/;"	v
G1	discrete_esay_control_lib_03.py	/^G1 = dsys1$/;"	v
G1	discrete_esay_control_lib_04_con_ALPHA.py	/^G1 = dsys1$/;"	v
G1	sympy_test_03.py	/^G1 = 1 \/ (s + 1)$/;"	v
G2	discrete_esay_control_lib_03.py	/^G2 = 350.\/3.3$/;"	v
G2	sympy_test_03.py	/^G2 = 10*s \/ (s + 10)$/;"	v
GH	discrete_esay_control_lib_03.py	/^GH = ct.series(Gpid, Gt)$/;"	v
GH	discrete_esay_control_lib_04_con_ALPHA.py	/^GH = ct.series(Gpid, Gt)$/;"	v
GHA	discrete_esay_control_lib_04_con_ALPHA.py	/^GHA = ct.series(Gpid, Gt * Alpha)$/;"	v
Gfeed	discrete_esay_control_lib_03.py	/^Gfeed = ct.feedback(GH, sys2=1, sign=-1)$/;"	v
Gfeed	discrete_esay_control_lib_04_con_ALPHA.py	/^Gfeed = ct.feedback(GH, sys2=1, sign=-1)$/;"	v
Gp	dippolito_continuo_01.py	/^Gp = 1 \/ (s**2 + s + 9)$/;"	v
Gpid	discrete_esay_control_lib_03.py	/^Gpid = ct.tf(bpid, apid, dt)$/;"	v
Gpid	discrete_esay_control_lib_04_con_ALPHA.py	/^Gpid = ct.tf(bpid, apid, dt)$/;"	v
Gt	discrete_esay_control_lib_03.py	/^Gt = ct.series(G1, G2)$/;"	v
Gt	discrete_esay_control_lib_04_con_ALPHA.py	/^Gt = ct.series(G1, Beta)$/;"	v
H	dippolito_continuo_01.py	/^H = 441 * (s+3)$/;"	v
H	saw_01.py	/^H = 1\/s * (s**2 * Lm * Cm + s * Rm * Cm + 1) \/ (s**2 * Lm * Cm * Cp + s * Rm * Cm * Cp + Cm + Cp)$/;"	v
H	saw_02.py	/^H = 1\/s * (s**2 * Lm * Cm + s * Rm * Cm + 1) \/ (s**2 * Lm * Cm * Cp + s * Rm * Cm * Cp + Cm + Cp)$/;"	v
H	saw_03.py	/^H = 1\/s * (s**2 * Lm * Cm + s * Rm * Cm + 1) \/ (s**2 * Lm * Cm * Cp + s * Rm * Cm * Cp + Cm + Cp)$/;"	v
Hjw	MAF_01.py	/^Hjw = 0.25 * (1 + exp(-1*2j*pi*f) + exp(-2*2j*pi*f) + exp(-3*2j*pi*f))$/;"	v
Hjw	MAF_02.py	/^Hjw = 1.\/8. * (1 + exp(-2j*pi*f) + exp(-2*2j*pi*f) + exp(-3*2j*pi*f) + exp(-4*2j*pi*f) + exp(-5*2j*pi*f) + exp(-6*2j*pi*f)+ exp(-7*2j*pi*f))$/;"	v
Hjw	zero_out_01.py	/^Hjw = 0.25 * (1 - 2 * exp(-2j*pi*f) + exp(-2*2j*pi*f))$/;"	v
Hjw1	MAF_02.py	/^Hjw1 = Hjw[0:500]$/;"	v
Hjw1	zero_out_01.py	/^Hjw1 = Hjw[0:500]$/;"	v
I_Sense	PID_solo_KP_pulsos.py	/^I_Sense = 69$/;"	v
Iout	PID_etapa_potencia_stretcher_01.py	/^Iout = Vpwm \/ (s*L + R + Rsense)$/;"	v
Iout	stretcher_caracterizacion_etapa_pot.py	/^Iout = Vpwm \/ (s*L + R + Rsense)$/;"	v
Iout	stretcher_pid01.py	/^Iout = Vpwm \/ (s*L + R + Rsense)$/;"	v
Iout	stretcher_pid02.py	/^Iout = Vpwm \/ (s*L + R + Rsense)$/;"	v
Iout_sim	PID_etapa_potencia_stretcher_01.py	/^Iout_sim = Iout.simplify()$/;"	v
Iout_sim	stretcher_caracterizacion_etapa_pot.py	/^Iout_sim = Iout.simplify()$/;"	v
Iout_sim	stretcher_pid01.py	/^Iout_sim = Iout.simplify()$/;"	v
Iout_sim	stretcher_pid02.py	/^Iout_sim = Iout.simplify()$/;"	v
K1	PID_solo_KP_pulsos.py	/^K1 = (KP + KI + KD)$/;"	v
K2	PID_solo_KP_pulsos.py	/^K2 = (KP + KD + KD)$/;"	v
K3	PID_solo_KP_pulsos.py	/^K3 = (KD)$/;"	v
KD	PID_solo_KP_pulsos.py	/^KD = 0$/;"	v
KI	PID_solo_KP_pulsos.py	/^KI = 0.0$/;"	v
KP	PID_solo_KP_pulsos.py	/^KP = 3.2$/;"	v
KP	system_z01.py	/^KP = 2.91$/;"	v
Kpwm	system_z01.py	/^Kpwm = 69 \/ 224$/;"	v
Kt	system_z01.py	/^Kt = KP * Kpwm$/;"	v
L	PID_etapa_potencia_stretcher_01.py	/^L = 141e-3$/;"	v
L	stretcher_caracterizacion_etapa_pot.py	/^L = 141e-3$/;"	v
L	stretcher_pid01.py	/^L = 141e-3$/;"	v
L	stretcher_pid02.py	/^L = 141e-3$/;"	v
L1	Tfilter_sympy_01.py	/^L1 = 1.4e-3$/;"	v
L2	Tfilter_sympy_01.py	/^L2 = 1.4e-3$/;"	v
Lm	saw_01.py	/^Lm = 86e-6      #86uHy$/;"	v
Lm	saw_02.py	/^Lm = 86e-6      #86uHy$/;"	v
Lm	saw_03.py	/^Lm = 79.82e-6      #86uHy$/;"	v
MadeString	datalogger.py	/^def MadeString(data):$/;"	f
Main	datalogger.py	/^def Main():    $/;"	f
Main	serial_test.py	/^def Main():$/;"	f
Main	serial_test_thread.py	/^def Main():$/;"	f
N	halfband_filter.py	/^N = 32  # Filter order$/;"	v
OpenLoop	dippolito_continuo_01.py	/^OpenLoop = H*Gp$/;"	v
OpenLoop_sim	dippolito_continuo_01.py	/^OpenLoop_sim = OpenLoop.simplify()$/;"	v
PID_roof	PID_solo_KP_pulsos.py	/^def PID_roof (setpoint, sample, last_d):$/;"	f
PID_simple	PID_solo_KP_pulsos.py	/^def PID_simple (setpoint, sample):$/;"	f
Plant_out	PID_etapa_potencia_stretcher_01.py	/^Plant_out = Vout * Aopamp$/;"	v
Plant_out	stretcher_caracterizacion_etapa_pot.py	/^Plant_out = Vout * Aopamp$/;"	v
Plant_out	stretcher_pid01.py	/^Plant_out = Vout * Aopamp$/;"	v
Plant_out	stretcher_pid02.py	/^Plant_out = Vout * Aopamp$/;"	v
Plant_out_sim	PID_etapa_potencia_stretcher_01.py	/^Plant_out_sim = Plant_out.simplify()$/;"	v
Plant_out_sim	stretcher_caracterizacion_etapa_pot.py	/^Plant_out_sim = Plant_out.simplify()$/;"	v
Plant_out_sim	stretcher_pid01.py	/^Plant_out_sim = Plant_out.simplify()$/;"	v
Plant_out_sim	stretcher_pid02.py	/^Plant_out_sim = Plant_out.simplify()$/;"	v
R	PID_etapa_potencia_stretcher_01.py	/^R = 24$/;"	v
R	caracterizacion_RC.py	/^R = 159.23$/;"	v
R	stretcher_caracterizacion_etapa_pot.py	/^R = 24$/;"	v
R	stretcher_pid01.py	/^R = 24$/;"	v
R	stretcher_pid02.py	/^R = 24$/;"	v
RL	Tfilter_sympy_01.py	/^RL = 1700$/;"	v
RT	Tfilter_sympy_01.py	/^RT = 18$/;"	v
Rm	saw_01.py	/^Rm = 26$/;"	v
Rm	saw_02.py	/^Rm = 26$/;"	v
Rm	saw_03.py	/^Rm = 18$/;"	v
Rsense	PID_etapa_potencia_stretcher_01.py	/^Rsense = 0.33$/;"	v
Rsense	stretcher_caracterizacion_etapa_pot.py	/^Rsense = 0.33$/;"	v
Rsense	stretcher_pid01.py	/^Rsense = 0.33$/;"	v
Rsense	stretcher_pid02.py	/^Rsense = 0.33$/;"	v
SerialWorker	datalogger.py	/^def SerialWorker (s):$/;"	f
SerialWorker	serial_test_thread.py	/^def SerialWorker (s):$/;"	f
System_sim	system_z01.py	/^System_sim = system.simplify()  # Esta funci贸n me permite ver como queda acomodada la funci贸n transferencia de H*Gp$/;"	v
T	dippolito_continuo_01.py	/^T = (H * Gp) \/ (1 + (H*Gp))$/;"	v
T	discrete_esay_control_lib_02.py	/^T = np.ndarray((T1.size,1), dtype=float)$/;"	v
T1	discrete_esay_control_lib_02.py	/^T1 = np.arange(0.0, 0.02, 0.001)       #OK con step NOK con step_response$/;"	v
Tf	PID_control_01.py	/^Tf = kd \/ 20$/;"	v
Ts	MAF_01.py	/^Ts = 0.1$/;"	v
Ts	MAF_02.py	/^Ts = 0.01$/;"	v
Ts	Tfilter_sympy_01.py	/^Ts = 1.\/25000$/;"	v
Ts	Tfilter_sympy_02.py	/^Ts = 1.\/25000$/;"	v
Ts	implementatio_01.py	/^Ts = 1. \/ fs$/;"	v
Ts	implementation_02.py	/^Ts = 1. \/ fs$/;"	v
Ts	implementation_03.py	/^Ts = 1. \/ fs$/;"	v
Ts	implementation_04.py	/^Ts = 1. \/ fs$/;"	v
Ts	implementation_05_result_micro.py	/^Ts = 1. \/ fs$/;"	v
Ts	max_error.py	/^Ts = 0.0005$/;"	v
Ts	rms_calc_01.py	/^Ts = 0.0005$/;"	v
Ts	rms_calc_02.py	/^Ts = 0.0005$/;"	v
Ts	rms_calc_03.py	/^Ts = 0.0005$/;"	v
Ts	rms_calc_04.py	/^Ts = 0.0005        #fs = 2000Hz 40 muestras$/;"	v
Ts	rms_calc_imple01.py	/^Ts = 0.00025       #fs = 4000Hz 80 muestras$/;"	v
Ts	zero_out_01.py	/^Ts = 0.01$/;"	v
Tsampling	caracterizacion_RC.py	/^Tsampling = 1 \/ Fsampling$/;"	v
Tsampling	stretcher_caracterizacion_etapa_pot.py	/^Tsampling = 1 \/ Fsampling$/;"	v
Tsim	dippolito_continuo_01.py	/^Tsim = T.simplify()  # Esta funci贸n me permite ver como queda acomodada la funci贸n transferencia de H*Gp$/;"	v
Vout	PID_etapa_potencia_stretcher_01.py	/^Vout = Iout * Rsense$/;"	v
Vout	stretcher_caracterizacion_etapa_pot.py	/^Vout = Iout * Rsense$/;"	v
Vout	stretcher_pid01.py	/^Vout = Iout * Rsense$/;"	v
Vout	stretcher_pid02.py	/^Vout = Iout * Rsense$/;"	v
Vout_sim	PID_etapa_potencia_stretcher_01.py	/^Vout_sim = Vout.simplify()$/;"	v
Vout_sim	stretcher_caracterizacion_etapa_pot.py	/^Vout_sim = Vout.simplify()$/;"	v
Vout_sim	stretcher_pid01.py	/^Vout_sim = Vout.simplify()$/;"	v
Vout_sim	stretcher_pid02.py	/^Vout_sim = Vout.simplify()$/;"	v
Vpwm	PID_etapa_potencia_stretcher_01.py	/^Vpwm = 35$/;"	v
Vpwm	stretcher_caracterizacion_etapa_pot.py	/^Vpwm = 35$/;"	v
Vpwm	stretcher_pid01.py	/^Vpwm = 35$/;"	v
Vpwm	stretcher_pid02.py	/^Vpwm = 35$/;"	v
WriteLog	datalogger.py	/^def WriteLog (data):$/;"	f
Z1	Tfilter_sympy_01.py	/^Z1 = s*L1$/;"	v
Z2	Tfilter_sympy_01.py	/^Z2 = s*L2$/;"	v
ZT	Tfilter_sympy_01.py	/^ZT = (s*CT*RT + 1) \/ (s*CT)$/;"	v
Zm	saw_02.py	/^Zm = Rm + s * Lm + 1. \/(s * Cm)$/;"	v
Zm	saw_03.py	/^Zm = Rm + s * Lm + 1. \/(s * Cm)$/;"	v
Zp	saw_02.py	/^Zp = 1. \/ (s * Cp)$/;"	v
Zp	saw_03.py	/^Zp = 1. \/ (s * Cp)$/;"	v
Zt	saw_02.py	/^Zt = Zm * Zp \/ (Zm + Zp)$/;"	v
Zt	saw_03.py	/^Zt = Zm * Zp \/ (Zm + Zp)$/;"	v
a	FIR_design.py	/^a = -a$/;"	v
a	FIR_design.py	/^a = signal.firwin(n, cutoff = 0.3, window = "hamming")$/;"	v
a	FIR_design.py	/^a = signal.firwin(n, cutoff = 0.3, window = "hanning")$/;"	v
a	FIR_design.py	/^a = signal.firwin(n, cutoff = 0.3, window = 'blackmanharris')$/;"	v
a	PID_control_02.py	/^a = [1.0, 0]$/;"	v
a	PID_control_03.py	/^a = [1, -1]$/;"	v
a	PID_control_04_pole_zero.py	/^a = [1, -1]$/;"	v
a	PID_control_05_pole_zero.py	/^a = [1, -1]$/;"	v
a	PID_control_06_pole_two_zero.py	/^a = [1, -1]$/;"	v
a	PID_control_07_pole_two_zero.py	/^a = [1, -1]$/;"	v
a	PID_control_boost_dc_dc_01.py	/^a = [1, -1]$/;"	v
a	discrete_esay_control_lib_02.py	/^a = [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]$/;"	v
a	discrete_esay_control_lib_03.py	/^a = [  1.00000000e+00,   9.21237959e-01,   5.39610404e-01, 1.33103857e-18]$/;"	v
a	discrete_esay_control_lib_04_con_ALPHA.py	/^a = [  1.00000000e+00,   9.21237959e-01,   5.39610404e-01, 1.33103857e-18]$/;"	v
a	implementatio_01.py	/^a = [1., -1.94454465, 0.94604136]$/;"	v
a	implementation_02.py	/^a = [1., -1.94454465, 0.94604136]$/;"	v
a	implementation_03.py	/^a = [1., -1.94454465, 0.94604136]$/;"	v
a	implementation_04.py	/^a = [1., -0.9722,]$/;"	v
a	implementation_05_result_micro.py	/^a = [1., -1.94454465, 0.94604136]$/;"	v
a	pandas_test_01.py	/^a = np.random.standard_normal((9, 4))$/;"	v
a	prueba_iir_circle_01.py	/^a = [0, 0, 0, 0, 1]$/;"	v
a	pruebo_print.py	/^a = "Mariano"$/;"	v
a	system_z01.py	/^a = np.array([1, Kt * 0.022])$/;"	v
a	test1.py	/^a = 26$/;"	v
a1	implementation_03.py	/^a1 = -63717$/;"	v
a1	implementation_04.py	/^a1 = -31856$/;"	v
a1	implementation_05_result_micro.py	/^a1 = -63717$/;"	v
a2	implementation_03.py	/^a2 = 30999$/;"	v
a2	implementation_05_result_micro.py	/^a2 = 30999$/;"	v
a_list	pruebo_print.py	/^a_list = ['this', 'is', 'awesome!']$/;"	v
a_list	pruebo_print.py	/^a_list = {1, "treu", 2, 5}$/;"	v
acc	implementation_05_result_micro.py	/^            acc = resto$/;"	v
acc	implementation_05_result_micro.py	/^acc = 0$/;"	v
acc	implementation_05_result_micro.py	/^acc = 1$/;"	v
adig	PID_analog_to_PID_digital.py	/^adig = [1.0, -1.]$/;"	v
adig	pole_zero_placement_01.py	/^adig = [1.0, 0, 0.877969]$/;"	v
adig	pole_zero_placement_02.py	/^adig = [1.0, -1.]$/;"	v
adig	pole_zero_placement_02.py	/^adig = den.expand()$/;"	v
adig	pole_zero_placement_03.py	/^adig = [1.0, -1.]$/;"	v
adig	pole_zero_placement_03.py	/^adig = den.expand()$/;"	v
adig	pole_zero_placement_04.py	/^adig = [1.0, -1.]$/;"	v
angles	caracterizacion_RC.py	/^angles = np.unwrap(np.angle(h))$/;"	v
angles	discrete_esay_01.py	/^angles = np.unwrap(np.angle(h))$/;"	v
angles	discrete_esay_02.py	/^angles = np.unwrap(np.angle(h))$/;"	v
angles	discrete_esay_03.py	/^angles = np.unwrap(np.angle(h))$/;"	v
angles	discrete_esay_control_lib_01.py	/^angles = np.unwrap(np.angle(h))$/;"	v
angles	stretcher_caracterizacion_etapa_pot.py	/^angles = np.unwrap(np.angle(h))$/;"	v
anykey	datalogger.py	/^def anykey():$/;"	f
anykey	serial_test_thread.py	/^def anykey():$/;"	f
apid	discrete_esay_control_lib_03.py	/^apid = [1, -1]$/;"	v
apid	discrete_esay_control_lib_04_con_ALPHA.py	/^apid = [1, -1]$/;"	v
ax	rms_calc_03.py	/^ax = plt.subplot(111, polar=True)$/;"	v
ax0	halfband_filter.py	/^ax0 = fig.add_subplot(211)$/;"	v
ax1	PID_control_04_pole_zero.py	/^ax1 = fig.add_subplot(111)$/;"	v
ax1	PID_control_05_pole_zero.py	/^ax1 = fig.add_subplot(111)$/;"	v
ax1	PID_control_06_pole_two_zero.py	/^ax1 = fig.add_subplot(111)$/;"	v
ax1	PID_control_07_pole_two_zero.py	/^ax1 = fig.add_subplot(111)$/;"	v
ax1	PID_control_boost_dc_dc_01.py	/^ax1 = fig.add_subplot(111)$/;"	v
ax1	discrete_esay_01.py	/^ax1 = fig.add_subplot(111)$/;"	v
ax1	discrete_esay_02.py	/^ax1 = fig.add_subplot(111)$/;"	v
ax1	discrete_esay_03.py	/^ax1 = fig.add_subplot(111)$/;"	v
ax1	discrete_esay_control_lib_01.py	/^ax1 = fig.add_subplot(111)$/;"	v
ax1	halfband_filter.py	/^ax1 = fig.add_subplot(212)$/;"	v
ax1	halfband_filter.py	/^ax1 = fig2.add_subplot(111)$/;"	v
ax2	discrete_esay_01.py	/^ax2 = ax1.twinx()$/;"	v
ax2	discrete_esay_02.py	/^ax2 = ax1.twinx()$/;"	v
ax2	discrete_esay_03.py	/^ax2 = ax1.twinx()$/;"	v
ax2	discrete_esay_control_lib_01.py	/^ax2 = ax1.twinx()$/;"	v
b	FIR_design.py	/^b = - signal.firwin(n, cutoff = 0.5, window = 'blackmanharris'); b[n\/2] = b[n\/2] + 1$/;"	v
b	PID_control_02.py	/^b = [kd, kp, ki]$/;"	v
b	PID_control_03.py	/^b = [k1, k2, k3]$/;"	v
b	PID_control_04_pole_zero.py	/^b = [kp + kd, -kd]$/;"	v
b	PID_control_05_pole_zero.py	/^b = [kp + kd + ki, ki - kd]$/;"	v
b	PID_control_06_pole_two_zero.py	/^b = [kp + kd + ki, -kp - 2*kd, kd]     #del spice$/;"	v
b	PID_control_07_pole_two_zero.py	/^b = [kp + kd + ki, -kp - 2*kd, kd]     #del spice$/;"	v
b	PID_control_boost_dc_dc_01.py	/^b = [kp + kd + ki, -kp - 2*kd, kd]     #del spice$/;"	v
b	discrete_esay_01.py	/^b = signal.firwin(80, 0.5, window=('kaiser', 8))$/;"	v
b	discrete_esay_02.py	/^b = [0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]$/;"	v
b	discrete_esay_03.py	/^b = [0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]$/;"	v
b	discrete_esay_control_lib_01.py	/^b = [0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]$/;"	v
b	discrete_esay_control_lib_02.py	/^b = [0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125]$/;"	v
b	discrete_esay_control_lib_03.py	/^b = [ 0.        ,  1.48941694,  0.9759379 , -0.00450648]$/;"	v
b	discrete_esay_control_lib_04_con_ALPHA.py	/^b = [ 0.        ,  1.48941694,  0.9759379 , -0.00450648]$/;"	v
b	halfband_filter.py	/^b = signal.firwin(N+1, 0.5)$/;"	v
b	implementatio_01.py	/^b = [0.9726465, -1.945293, 0.9726465]$/;"	v
b	implementation_02.py	/^b = [0.9726465, -1.945293, 0.9726465]$/;"	v
b	implementation_03.py	/^b = [0.9726465, -1.945293, 0.9726465]$/;"	v
b	implementation_04.py	/^b = [1., -1]$/;"	v
b	implementation_05_result_micro.py	/^b = [0.9726465, -1.945293, 0.9726465]$/;"	v
b	prueba_iir_circle_01.py	/^b = [1, -1.5877, 2.8377, -1.7346, 1.25]$/;"	v
b	pruebo_print.py	/^b = "Chau"$/;"	v
b	system_z01.py	/^b = np.array([Kt, 0])$/;"	v
b0	implementation_03.py	/^b0 = 31870$/;"	v
b0	implementation_04.py	/^b0 = 32767$/;"	v
b0	implementation_05_result_micro.py	/^b0 = 31870$/;"	v
b1	implementation_03.py	/^b1 = -63740$/;"	v
b1	implementation_04.py	/^b1 = -32767$/;"	v
b1	implementation_05_result_micro.py	/^b1 = -63740$/;"	v
b2	implementation_03.py	/^b2 = 31870$/;"	v
b2	implementation_05_result_micro.py	/^b2 = 31870$/;"	v
bands	halfband_filter.py	/^bands = numpy.array([0., .22, .28, .5])$/;"	v
baud	datalogger.py	/^baud = 9600$/;"	v
baud	serial_test.py	/^baud = 9600$/;"	v
baud	serial_test_thread.py	/^baud = 9600$/;"	v
bdig	PID_analog_to_PID_digital.py	/^bdig = [k1, k2, k3]$/;"	v
bdig	pole_zero_placement_01.py	/^bdig = [1.0, 0, -1.0]$/;"	v
bdig	pole_zero_placement_02.py	/^bdig = [1.0, - 2.76967246245984, + 3.5690333642877, - 2.76967246245984, + 1.0]$/;"	v
bdig	pole_zero_placement_02.py	/^bdig = num.expand()$/;"	v
bdig	pole_zero_placement_03.py	/^bdig = [1.0, - 3.87931070665274, + 5.64406277927486, - 3.65004344388956, + 0.88529281]$/;"	v
bdig	pole_zero_placement_03.py	/^bdig = num.expand()$/;"	v
bdig	pole_zero_placement_04.py	/^bdig = [k1, k2, k3]$/;"	v
bpid	discrete_esay_control_lib_03.py	/^bpid = [kp + kd + ki, -kp - 2*kd, kd]     #del spice$/;"	v
bpid	discrete_esay_control_lib_04_con_ALPHA.py	/^bpid = [kp + kd + ki, -kp - 2*kd, kd]     #del spice$/;"	v
bx	halfband_filter.py	/^bx = bands*2*pi$/;"	v
closed_loop	PID_etapa_potencia_stretcher_01.py	/^closed_loop = realimento(open_loop, ([1],[1]))$/;"	v
closed_loop	stretcher_pid01.py	/^closed_loop = realimento(open_loop, ([1],[1]))$/;"	v
closed_loop	stretcher_pid02.py	/^closed_loop = realimento(open_loop, ([1],[1]))$/;"	v
control	dippolito_continuo_01.py	/^control = lti(num, den)$/;"	v
controller	PID_etapa_potencia_stretcher_01.py	/^controller = zpk2tf(zeros, poles, k)$/;"	v
controller	stretcher_pid01.py	/^controller = zpk2tf(zeros, poles, k)$/;"	v
controller	stretcher_pid02.py	/^controller = zpk2tf(zeros, poles, k)$/;"	v
cycles	vmax01.py	/^cycles = 2.$/;"	v
cyclesize	vmax01.py	/^cyclesize = length \/ cycles$/;"	v
d	FIR_design.py	/^d = - (a+b); d[n\/2] = d[n\/2] + 1$/;"	v
d	PID_solo_KP_pulsos.py	/^d = 224$/;"	v
data	data_read_example.py	/^data=data[1:,:]#eliminate first row of data (row 0)$/;"	v
data	data_read_example.py	/^data=io.read_array('fourier_hw1.txt',separator='\\t')#read data from file (tab-delimited)$/;"	v
dates	pandas_test_01.py	/^dates = pd.date_range('2015-1-1', periods=9, freq = 'M')$/;"	v
den	Tfilter_sympy_01.py	/^den = [1.96e-6, 2.4304, 43327.2727272727, 7727272727.27273]$/;"	v
den	Tfilter_sympy_02.py	/^den = [1.96e-6, 2.4304, 43327.2727272727, 7727272727.27273]$/;"	v
den	caracterizacion_RC.py	/^den = [1, 6280.22]				#esto es a0 s1 y a1 s0$/;"	v
den	dippolito_continuo_01.py	/^den = [1,442,1332]$/;"	v
den	pole_zero_placement_02.py	/^den = (z - freqp1\/fs)$/;"	v
den	pole_zero_placement_03.py	/^den = (z - freqp1\/fs)$/;"	v
den	saw_01.py	/^den = [2.451e-28, 7.41e-23, 3.4e-12, 0]$/;"	v
den	system_z01.py	/^den = z + Kt$/;"	v
den1	dippolito_continuo_01.py	/^den1 = [1,1,9] $/;"	v
denH	saw_02.py	/^denH = [2.451e-28, 7.41e-23, 3.4e-12, 0]$/;"	v
denH	saw_03.py	/^denH = [2.451e-28, 7.41e-23, 3.4e-12, 0]$/;"	v
denZ	saw_02.py	/^denZ = [8.6e-5, 26.0, 1192982456140.35, 0]$/;"	v
denZ	saw_03.py	/^denZ = [7.982e-5, 18.0, 593906592697716.0, 0]$/;"	v
den_d2	stretcher_caracterizacion_etapa_pot.py	/^den_d2 = [1, -0.8861]$/;"	v
den_open	dippolito_continuo_01.py	/^den_open = den1$/;"	v
den_planta	PID_etapa_potencia_stretcher_01.py	/^den_planta = [0.141, 24.33]			#esto es a0 s1 y a1 s0$/;"	v
den_planta	stretcher_caracterizacion_etapa_pot.py	/^den_planta = [0.141, 24.33]			#esto es a0 s1 y a1 s0$/;"	v
df	pandas_test_01.py	/^df = pd.DataFrame(a)$/;"	v
df1	pandas_test_01.py	/^df1 = df.cumsum()$/;"	v
dpid	PID_solo_KP_pulsos.py	/^dpid = np.zeros_like (sp)$/;"	v
dplot	pandas_test_02.py	/^dplot = DAX['Close']$/;"	v
dpwm	PID_solo_KP_pulsos.py	/^dpwm = np.zeros_like (sp)$/;"	v
dsys1	discrete_esay_control_lib_02.py	/^dsys1 = ct.tf(b, a, dt)$/;"	v
dsys1	discrete_esay_control_lib_03.py	/^dsys1 = ct.tf(b, a, dt)$/;"	v
dsys1	discrete_esay_control_lib_04_con_ALPHA.py	/^dsys1 = ct.tf(b, a, dt)$/;"	v
dt	discrete_esay_control_lib_02.py	/^dt = 1.0$/;"	v
dt	discrete_esay_control_lib_03.py	/^dt = 1.0\/25000$/;"	v
dt	discrete_esay_control_lib_04_con_ALPHA.py	/^dt = 1.0\/25000$/;"	v
e	PID_solo_KP_pulsos.py	/^e = np.zeros_like (sp)$/;"	v
error_z1	PID_solo_KP_pulsos.py	/^error_z1 = 0$/;"	v
error_z2	PID_solo_KP_pulsos.py	/^error_z2 = 0$/;"	v
expr	sympy_test_01.py	/^expr = x**2 + x*y$/;"	v
expr1	sympy_test_02.py	/^expr1 = diff(cos(x), x)$/;"	v
expr2	sympy_test_02.py	/^expr2 = diff(exp(x**2), x)$/;"	v
f	MAF_01.py	/^f = np.arange (0, 1, 0.001)$/;"	v
f	MAF_02.py	/^f = np.arange (0.001, 1 \/ Ts, 0.001)$/;"	v
f	PID_control_02.py	/^f=arange(0.1,1000,0.1)$/;"	v
f	PID_control_03_analog.py	/^f=arange(0.1,100000,1)$/;"	v
f	python_lowpass_demo.py	/^f=arange(0.1,1000,0.1)$/;"	v
f	zero_out_01.py	/^f = np.arange (0.001, 1 \/ Ts, 0.001)$/;"	v
f1	MAF_02.py	/^f1 = f[0:500]$/;"	v
f1	zero_out_01.py	/^f1 = f[0:500]$/;"	v
fbank_feat	mlcc_test_01.py	/^fbank_feat = logfbank(sig,rate)$/;"	v
fig	PID_control_04_pole_zero.py	/^fig = plt.figure()$/;"	v
fig	PID_control_05_pole_zero.py	/^fig = plt.figure()$/;"	v
fig	PID_control_06_pole_two_zero.py	/^fig = plt.figure()$/;"	v
fig	PID_control_07_pole_two_zero.py	/^fig = plt.figure(1)$/;"	v
fig	PID_control_boost_dc_dc_01.py	/^fig = plt.figure(1)$/;"	v
fig	discrete_esay_01.py	/^fig = plt.figure()$/;"	v
fig	discrete_esay_02.py	/^fig = plt.figure()$/;"	v
fig	discrete_esay_03.py	/^fig = plt.figure()$/;"	v
fig	discrete_esay_control_lib_01.py	/^fig = plt.figure()$/;"	v
fig	halfband_filter.py	/^fig = mpl.pyplot.figure(1)$/;"	v
fig2	halfband_filter.py	/^fig2 = mpl.pyplot.figure(2)$/;"	v
fo	implementatio_01.py	/^fo = 50$/;"	v
fo	implementation_02.py	/^fo = 50$/;"	v
fo	implementation_03.py	/^fo = 50$/;"	v
fo	implementation_04.py	/^fo = 50$/;"	v
fo	implementation_05_result_micro.py	/^fo = 50$/;"	v
fpass	rms_calc_01.py	/^fpass = 35$/;"	v
fpass	rms_calc_02.py	/^fpass = 35$/;"	v
fpass	rms_calc_03.py	/^fpass = 35$/;"	v
freq	PID_etapa_potencia_stretcher_01.py	/^freq = np.arange(1, 10000, 0.01)$/;"	v
freq	caracterizacion_RC.py	/^freq = np.arange(100, 1e5, 1)$/;"	v
freq	dippolito_continuo_01.py	/^freq = arange(0.1, 1000, 0.01)$/;"	v
freq	rms_calc_04.py	/^freq = 50$/;"	v
freq	rms_calc_imple01.py	/^freq = 50$/;"	v
freq	saw_01.py	/^freq = np.arange (10e6, 10e9, 10e6)  #de 40 a 1000MHz cada 10MHz$/;"	v
freq	saw_02.py	/^freq = np.arange (10e6, 1000e6, 1e6)  #de 40 a 1000MHz cada 10MHz$/;"	v
freq	saw_03.py	/^freq = np.arange (1000e6, 10000e6, 1e6)  #de 40 a 1000MHz cada 10MHz$/;"	v
freq	stretcher_caracterizacion_etapa_pot.py	/^freq = np.arange(1, 10000, 0.01)$/;"	v
freq	stretcher_pid01.py	/^freq = np.arange(1, 10000, 0.01)$/;"	v
freq	stretcher_pid02.py	/^freq = np.arange(1, 10000, 0.01)$/;"	v
freqp1	pole_zero_placement_02.py	/^freqp1 = fs$/;"	v
freqp1	pole_zero_placement_03.py	/^freqp1 = fs$/;"	v
freqz1	pole_zero_placement_02.py	/^freqz1 = 25.$/;"	v
freqz1	pole_zero_placement_03.py	/^freqz1 = 25.$/;"	v
freqz2	pole_zero_placement_02.py	/^freqz2 = 185.$/;"	v
freqz2	pole_zero_placement_03.py	/^freqz2 = 185.$/;"	v
fs	PID_analog_to_PID_digital.py	/^fs = 44000.$/;"	v
fs	PID_control_02.py	/^fs = 44000$/;"	v
fs	PID_control_03.py	/^fs = 44000$/;"	v
fs	PID_control_04_pole_zero.py	/^fs = 44000$/;"	v
fs	PID_control_05_pole_zero.py	/^fs = 44000$/;"	v
fs	PID_control_06_pole_two_zero.py	/^fs = 44000$/;"	v
fs	PID_control_07_pole_two_zero.py	/^fs = 44000$/;"	v
fs	PID_control_boost_dc_dc_01.py	/^fs = 4400.0$/;"	v
fs	discrete_esay_control_lib_03.py	/^fs = 25000$/;"	v
fs	discrete_esay_control_lib_04_con_ALPHA.py	/^fs = 25000$/;"	v
fs	implementatio_01.py	/^fs = 2000$/;"	v
fs	implementation_02.py	/^fs = 2000$/;"	v
fs	implementation_03.py	/^fs = 2000$/;"	v
fs	implementation_04.py	/^fs = 2000$/;"	v
fs	implementation_05_result_micro.py	/^fs = 2000$/;"	v
fs	pole_zero_placement_01.py	/^fs = 500$/;"	v
fs	pole_zero_placement_02.py	/^fs = 1000.$/;"	v
fs	pole_zero_placement_03.py	/^fs = 44000.$/;"	v
fs	pole_zero_placement_04.py	/^fs = 44000.$/;"	v
fsample	rms_calc_01.py	/^fsample = 1 \/ Ts$/;"	v
fsample	rms_calc_02.py	/^fsample = 1 \/ Ts$/;"	v
fsample	rms_calc_03.py	/^fsample = 1 \/ Ts$/;"	v
fss	PID_analog_to_PID_digital.py	/^fss = int(fs)$/;"	v
fss	pole_zero_placement_03.py	/^fss = int(fs)$/;"	v
fss	pole_zero_placement_04.py	/^fss = int(fs)$/;"	v
fstop	rms_calc_01.py	/^fstop = 5$/;"	v
fstop	rms_calc_02.py	/^fstop = 5$/;"	v
fstop	rms_calc_03.py	/^fstop = 5$/;"	v
gain	PID_control_03_analog.py	/^gain = 1$/;"	v
gan_sistema	PID_solo_KP_pulsos.py	/^gan_sistema = I_Sense \/ d$/;"	v
h	halfband_filter.py	/^h = signal.remez(N+1, bands, [1,0], [1,1])$/;"	v
handle_data	datalogger.py	/^def handle_data(data, console=False):$/;"	f
handle_data	serial_test_thread.py	/^def handle_data(data, console=False):$/;"	f
iacd	rms_calc_imple01.py	/^iacd = np.int16(itd - izerod)$/;"	v
imax	max_error.py	/^imax = 1$/;"	v
imax	rms_calc_01.py	/^imax = 1$/;"	v
imax	rms_calc_02.py	/^imax = 1$/;"	v
imax	rms_calc_03.py	/^imax = 1$/;"	v
imax	rms_calc_04.py	/^imax = 1$/;"	v
imax	rms_calc_imple01.py	/^imax = 1$/;"	v
impz	FIR_design.py	/^def impz(b,a=1):$/;"	f
impz	elliptic_bandpass.py	/^def impz(b,a=1):$/;"	f
impz	implementatio_01.py	/^def impz(b,a=1):$/;"	f
impz	prueba_iir_circle_01.py	/^def impz(b,a=1):$/;"	f
impz	rms_calc_01.py	/^def impz(b,a=1):$/;"	f
impz	zero_out_02.py	/^def impz(b,a=1):$/;"	f
index	plot_zplane.py	/^    index = arange(0,20)$/;"	v
iout	PID_solo_KP_pulsos.py	/^iout = np.zeros_like (sp)$/;"	v
irms	rms_calc_01.py	/^irms = sqrt(ni3)$/;"	v
irms	rms_calc_02.py	/^irms = sqrt(n3)$/;"	v
irms	rms_calc_03.py	/^irms = sqrt(ni3)$/;"	v
irms	rms_calc_04.py	/^irms = sqrt(ni3)$/;"	v
it	max_error.py	/^it = imax * sin(2*pi*50*t)$/;"	v
it	rms_calc_01.py	/^it = imax * sin(2*pi*50*t+5*pi\/4)             #para probar cos phi$/;"	v
it	rms_calc_02.py	/^it = np.ones(1024)$/;"	v
it	rms_calc_03.py	/^it = imax * sin(2*pi*50*t+theta_i)             #para probar cos phi$/;"	v
it	rms_calc_04.py	/^it = imax * sin(2*pi*freq*t+theta_i)             #para probar cos phi$/;"	v
it	rms_calc_imple01.py	/^it = imax * sin(2*pi*freq*t+theta_i)             #para probar cos phi$/;"	v
itd	max_error.py	/^itd = imax * sin(2*pi*50*t+pi\/40)$/;"	v
itd	rms_calc_imple01.py	/^itd = np.uint16(zero_current + it * 1024)$/;"	v
izerod	rms_calc_imple01.py	/^izerod = np.uint16(itd.sum() \/ lenght)$/;"	v
k	PID_etapa_potencia_stretcher_01.py	/^k = 200$/;"	v
k	implementatio_01.py	/^k = fs \/ fo$/;"	v
k	implementation_02.py	/^k = fs \/ fo$/;"	v
k	implementation_03.py	/^k = fs \/ fo$/;"	v
k	implementation_04.py	/^k = fs \/ fo$/;"	v
k	implementation_05_result_micro.py	/^k = fs \/ fo$/;"	v
k	stretcher_pid01.py	/^k = 10$/;"	v
k	stretcher_pid02.py	/^k = 10$/;"	v
k1	PID_analog_to_PID_digital.py	/^k1 = kp_dig + ki_dig + kd_dig$/;"	v
k1	PID_control_03.py	/^k1 = kp + ki + kd$/;"	v
k1	pole_zero_placement_04.py	/^k1 = kp_dig + ki_dig + kd_dig$/;"	v
k2	PID_analog_to_PID_digital.py	/^k2 = -kp_dig - 2*kd_dig$/;"	v
k2	PID_control_03.py	/^k2 = -kp - 2*kd$/;"	v
k2	pole_zero_placement_04.py	/^k2 = -kp_dig - 2*kd_dig$/;"	v
k3	PID_analog_to_PID_digital.py	/^k3 = kd_dig$/;"	v
k3	PID_control_03.py	/^k3 = kd$/;"	v
k3	pole_zero_placement_04.py	/^k3 = kd_dig$/;"	v
kd	PID_analog_to_PID_digital.py	/^kd = 0.0001$/;"	v
kd	PID_control_01.py	/^kd = 0.00001$/;"	v
kd	PID_control_02.py	/^kd = 0.00001$/;"	v
kd	PID_control_03.py	/^kd = 0.0$/;"	v
kd	PID_control_03_analog.py	/^kd = 0.1$/;"	v
kd	PID_control_04_pole_zero.py	/^kd = 0.45$/;"	v
kd	PID_control_05_pole_zero.py	/^kd = 0.40$/;"	v
kd	PID_control_06_pole_two_zero.py	/^kd = 80$/;"	v
kd	PID_control_07_pole_two_zero.py	/^kd = 0.0$/;"	v
kd	PID_control_boost_dc_dc_01.py	/^kd = 0.0$/;"	v
kd	discrete_esay_control_lib_03.py	/^kd = 0.0$/;"	v
kd	discrete_esay_control_lib_04_con_ALPHA.py	/^kd = 0.0$/;"	v
kd	pole_zero_placement_04.py	/^kd = 0.0001$/;"	v
kd_analog	PID_control_boost_dc_dc_01.py	/^kd_analog = kd \/ fs$/;"	v
kd_dig	PID_analog_to_PID_digital.py	/^kd_dig = kd * fs$/;"	v
kd_dig	pole_zero_placement_04.py	/^kd_dig = kd * fs$/;"	v
ki	PID_analog_to_PID_digital.py	/^ki = 25.$/;"	v
ki	PID_control_01.py	/^ki = 1.0$/;"	v
ki	PID_control_02.py	/^ki = 1.0$/;"	v
ki	PID_control_03.py	/^ki = 0.0093$/;"	v
ki	PID_control_03_analog.py	/^ki = 0.05$/;"	v
ki	PID_control_05_pole_zero.py	/^ki = 0.05$/;"	v
ki	PID_control_06_pole_two_zero.py	/^ki = 0.00012$/;"	v
ki	PID_control_07_pole_two_zero.py	/^ki = 0.0156$/;"	v
ki	PID_control_boost_dc_dc_01.py	/^ki = 1.0$/;"	v
ki	discrete_esay_control_lib_03.py	/^ki = 58.0\/fs$/;"	v
ki	discrete_esay_control_lib_04_con_ALPHA.py	/^ki = 6151.0 * Alpha\/fs$/;"	v
ki	pole_zero_placement_04.py	/^ki = 25.$/;"	v
ki_analog	PID_control_boost_dc_dc_01.py	/^ki_analog = ki * fs$/;"	v
ki_dig	PID_analog_to_PID_digital.py	/^ki_dig = ki \/ fs$/;"	v
ki_dig	pole_zero_placement_04.py	/^ki_dig = ki \/ fs$/;"	v
kp	PID_analog_to_PID_digital.py	/^kp = 0.5$/;"	v
kp	PID_control_01.py	/^kp = 0.01$/;"	v
kp	PID_control_02.py	/^kp = 0.01$/;"	v
kp	PID_control_03.py	/^kp = 1.5$/;"	v
kp	PID_control_03_analog.py	/^kp = 0.025$/;"	v
kp	PID_control_04_pole_zero.py	/^kp = 0.01$/;"	v
kp	PID_control_05_pole_zero.py	/^kp = 0.01$/;"	v
kp	PID_control_06_pole_two_zero.py	/^kp = 0.54$/;"	v
kp	PID_control_07_pole_two_zero.py	/^kp = 4.0$/;"	v
kp	PID_control_boost_dc_dc_01.py	/^kp = 0.0$/;"	v
kp	discrete_esay_control_lib_03.py	/^kp = 0.0015\/fs$/;"	v
kp	discrete_esay_control_lib_04_con_ALPHA.py	/^kp = 0.159 * Alpha\/fs$/;"	v
kp	pole_zero_placement_04.py	/^kp = 0.5$/;"	v
kp_analog	PID_control_boost_dc_dc_01.py	/^kp_analog = kp + ki \/ 2$/;"	v
kp_dig	PID_analog_to_PID_digital.py	/^kp_dig = kp - ki_dig \/ 2$/;"	v
kp_dig	pole_zero_placement_04.py	/^kp_dig = kp - ki_dig \/ 2$/;"	v
kx	discrete_esay_control_lib_04_con_ALPHA.py	/^kx = dict(color='r', linewidth=3.0, label="Gplant vs Omega")$/;"	v
lenght	implementatio_01.py	/^lenght = 10*k$/;"	v
lenght	implementation_02.py	/^lenght = 3*k$/;"	v
lenght	implementation_03.py	/^lenght = 10*k$/;"	v
lenght	implementation_04.py	/^lenght = 10*k$/;"	v
lenght	implementation_05_result_micro.py	/^lenght = 10*k$/;"	v
lenght	max_error.py	/^lenght = 20$/;"	v
lenght	rms_calc_01.py	/^lenght = 1024$/;"	v
lenght	rms_calc_02.py	/^lenght = 1024$/;"	v
lenght	rms_calc_03.py	/^lenght = 1024$/;"	v
lenght	rms_calc_04.py	/^lenght = 40        #fs = 2000Hz 40 muestras$/;"	v
lenght	rms_calc_imple01.py	/^lenght = 80        #fs = 2000Hz 40 muestras$/;"	v
length	vmax01.py	/^length = 512$/;"	v
lti_to_sympy	tc_udemm.py	/^def lti_to_sympy(lsys, symplify=True):$/;"	f
mfcc_feat	mlcc_test_01.py	/^mfcc_feat = mfcc(sig,rate)$/;"	v
mfreqz	FIR_design.py	/^def mfreqz(b,a=1):$/;"	f
mfreqz	elliptic_bandpass.py	/^def mfreqz(b,a=1):$/;"	f
mfreqz	prueba_iir_circle_01.py	/^def mfreqz(b,a=1):$/;"	f
mfreqz	rms_calc_01.py	/^def mfreqz(b,a=1):$/;"	f
mfreqz	rms_calc_02.py	/^def mfreqz(b,a=1):$/;"	f
mfreqz	rms_calc_03.py	/^def mfreqz(b,a=1):$/;"	f
mfreqz	zero_out_02.py	/^def mfreqz(b,a=1):$/;"	f
multiplico_sistemas	tc_udemm.py	/^def multiplico_sistemas(sys1, sys2):$/;"	f
n	FIR_design.py	/^n = 1001$/;"	v
n	FIR_design.py	/^n = 101$/;"	v
n	FIR_design.py	/^n = 61$/;"	v
n2	rms_calc_02.py	/^n2 = response**2$/;"	v
n3	rms_calc_02.py	/^n3 = n2.sum()\/lenght$/;"	v
ni2	rms_calc_01.py	/^ni2 = response_i**2$/;"	v
ni2	rms_calc_03.py	/^ni2 = response_i**2$/;"	v
ni2	rms_calc_04.py	/^ni2 = it**2$/;"	v
ni3	rms_calc_01.py	/^ni3 = ni2.sum()\/lenght$/;"	v
ni3	rms_calc_03.py	/^ni3 = ni2.sum()\/lenght$/;"	v
ni3	rms_calc_04.py	/^ni3 = ni2.sum()\/lenght$/;"	v
nresp	rms_calc_01.py	/^nresp = response_i * response_v$/;"	v
nresp	rms_calc_03.py	/^nresp = response_i * response_v$/;"	v
num	Tfilter_sympy_01.py	/^num = [30600, 7727272727.27273]$/;"	v
num	Tfilter_sympy_02.py	/^num = [30600, 7727272727.27273]$/;"	v
num	caracterizacion_RC.py	/^num = [6280.22]				#esto es b0 s1 y b1 s0 (orden descendente)$/;"	v
num	dippolito_continuo_01.py	/^num = [441,1323]$/;"	v
num	pole_zero_placement_02.py	/^num = (z - e**(1.0j*freqz1\/fs*2*pi)) * (z - e**(1.0j*-freqz1\/fs*2*pi)) * (z - e**(1.0j*freqz2\/fs*2*pi)) * (z - e**(1.0j*-freqz2\/fs*2*pi))$/;"	v
num	pole_zero_placement_03.py	/^num = (z - r1*e**(1.0j*freqz1\/fs*2*pi)) * (z - r1*e**(1.0j*-freqz1\/fs*2*pi)) * (z - r2*e**(1.0j*freqz2\/fs*2*pi)) * (z - r2*e**(1.0j*-freqz2\/fs*2*pi))$/;"	v
num	saw_01.py	/^num = [1.29e-16, 3.9e-11, 1]$/;"	v
num	system_z01.py	/^num = Kt * z$/;"	v
numH	saw_02.py	/^numH = [1.29e-16, 3.9e-11, 1]$/;"	v
numH	saw_03.py	/^numH = [1.29e-16, 3.9e-11, 1]$/;"	v
numZ	saw_02.py	/^numZ = [45263157.8947368, 13684210526315.8, 3.50877192982456e+23]$/;"	v
numZ	saw_03.py	/^numZ = [34704347.826087, 7826086956521.74, 2.58031221777835e+26]$/;"	v
num_d2	stretcher_caracterizacion_etapa_pot.py	/^num_d2 = [0.091, 0.091]$/;"	v
num_open	dippolito_continuo_01.py	/^num_open = [441, 1323]$/;"	v
num_planta	PID_etapa_potencia_stretcher_01.py	/^num_planta = [0, 36.96]				#esto es b0 s1 y b1 s0$/;"	v
num_planta	stretcher_caracterizacion_etapa_pot.py	/^num_planta = [0, 36.96]				#esto es b0 s1 y b1 s0$/;"	v
numd1	Tfilter_sympy_01.py	/^numd1 = numd[0,:]$/;"	v
numd1	Tfilter_sympy_02.py	/^numd1 = numd[0,:]$/;"	v
nv2	rms_calc_01.py	/^nv2 = response_v**2$/;"	v
nv2	rms_calc_03.py	/^nv2 = response_v**2$/;"	v
nv2	rms_calc_04.py	/^nv2 = vt**2$/;"	v
nv3	rms_calc_01.py	/^nv3 = nv2.sum()\/lenght$/;"	v
nv3	rms_calc_03.py	/^nv3 = nv2.sum()\/lenght$/;"	v
nv3	rms_calc_04.py	/^nv3 = nv2.sum()\/lenght$/;"	v
omega	discrete_esay_control_lib_02.py	/^omega = np.arange(0.1, 6.28, 6.28\/1000)$/;"	v
omega	discrete_esay_control_lib_03.py	/^omega = np.arange(100, 3.1415 \/ dt, 1)$/;"	v
omega	discrete_esay_control_lib_04_con_ALPHA.py	/^omega = np.arange(100, 3.1415 \/ dt, 1)$/;"	v
open_loop	PID_etapa_potencia_stretcher_01.py	/^open_loop = multiplico_sistemas(controller, planta)$/;"	v
open_loop	stretcher_pid01.py	/^open_loop = multiplico_sistemas(controller, planta)$/;"	v
open_loop	stretcher_pid02.py	/^open_loop = multiplico_sistemas(controller, planta)$/;"	v
openl	dippolito_continuo_01.py	/^openl = lti(num_open, den_open)$/;"	v
p	python_lowpass_demo.py	/^p=2.0*pi*10$/;"	v
pact	rms_calc_01.py	/^pact = nresp.sum()\/lenght$/;"	v
pact	rms_calc_03.py	/^pact = nresp.sum()\/lenght$/;"	v
pact	rms_calc_04.py	/^pact = power_instant.sum()\/lenght$/;"	v
pact	rms_calc_imple01.py	/^pact = power_instant.sum()\/lenght$/;"	v
pact_ajust	rms_calc_imple01.py	/^pact_ajust = pact * 2.064$/;"	v
pact_error	rms_calc_04.py	/^pact_error = ((pact_teorico - pact) \/ pact_teorico) * 100$/;"	v
pact_error	rms_calc_imple01.py	/^pact_error = ((pact_teorico - pact) \/ pact_teorico) * 100$/;"	v
pact_error_ajust	rms_calc_imple01.py	/^pact_error_ajust = ((pact_teorico - pact_ajust) \/ pact_teorico) * 100$/;"	v
pact_teorico	rms_calc_04.py	/^pact_teorico = (imax * vmax) \/ 2.0$/;"	v
pact_teorico	rms_calc_imple01.py	/^pact_teorico = (imax * vmax) \/ 2.0$/;"	v
pactd	rms_calc_imple01.py	/^pactd = np.int32(iacd * vt_rect3)$/;"	v
pactd	rms_calc_imple01.py	/^pactd = pactd >> 8$/;"	v
pactd_2	rms_calc_imple01.py	/^pactd_2 = pactd.sum() \/ lenght$/;"	v
pactd_2_ajust	rms_calc_imple01.py	/^pactd_2_ajust = pactd_2 * 0.0453484$/;"	v
pactd_error_ajust	rms_calc_imple01.py	/^pactd_error_ajust = ((pact_teorico - pactd_2_ajust) \/ pact_teorico) * 100$/;"	v
pf	rms_calc_01.py	/^pf = pact \/ s$/;"	v
pf	rms_calc_03.py	/^pf = pact \/ s$/;"	v
pf	rms_calc_04.py	/^pf = pact \/ s$/;"	v
planta	PID_etapa_potencia_stretcher_01.py	/^planta = lti(num_planta, den_planta)$/;"	v
planta	caracterizacion_RC.py	/^planta = lti(num, den)$/;"	v
planta	dippolito_continuo_01.py	/^planta = lti(1, den1)$/;"	v
planta	stretcher_caracterizacion_etapa_pot.py	/^planta = lti(num_planta, den_planta)$/;"	v
planta	stretcher_pid01.py	/^planta = sympy_to_lti(Plant_out_sim)$/;"	v
planta	stretcher_pid02.py	/^planta = sympy_to_lti(Plant_out_sim)$/;"	v
planta_d	caracterizacion_RC.py	/^planta_d = lti(num_d1, den_d1)$/;"	v
planta_d1	stretcher_caracterizacion_etapa_pot.py	/^planta_d1 = lti(num_d1, den_d1)$/;"	v
planta_d2	stretcher_caracterizacion_etapa_pot.py	/^planta_d2 = lti(num_d2, den_d2)$/;"	v
poles	PID_control_03_analog.py	/^poles = [0, 10000]$/;"	v
poles	PID_etapa_potencia_stretcher_01.py	/^poles = [-1000 + 0.0j]	#polo en w = 1000$/;"	v
poles	stretcher_pid01.py	/^poles = [-6280]	#polo en w = 1000$/;"	v
poles	stretcher_pid02.py	/^poles = [0]	#polo en w = 1000$/;"	v
poles	system_z01.py	/^poles = [-0.308035714285714]$/;"	v
port	datalogger.py	/^port = 'COM20'$/;"	v
port	serial_test.py	/^port = 'COM20'$/;"	v
port	serial_test_thread.py	/^port = 'COM20'$/;"	v
power_instant	rms_calc_04.py	/^power_instant = it * vt_rect2$/;"	v
power_instant	rms_calc_imple01.py	/^power_instant = it * vt_rect2$/;"	v
print_a_list	pruebo_print.py	/^def print_a_list(a_list):$/;"	f
q	rms_calc_01.py	/^q = s*sqrt(1-pf**2)$/;"	v
q	rms_calc_03.py	/^q = s*sqrt(1-pf**2)$/;"	v
q	rms_calc_04.py	/^q = s*sqrt(1-pf**2)$/;"	v
quartercycle	vmax01.py	/^quartercycle = cyclesize \/ 4$/;"	v
r1	pole_zero_placement_03.py	/^r1 = 0.97$/;"	v
r2	pole_zero_placement_03.py	/^r2 = 0.97$/;"	v
realimento	tc_udemm.py	/^def realimento (alpha, beta):$/;"	f
res	math_test_01.py	/^res = math.sqrt(9)$/;"	v
response	rms_calc_02.py	/^response = signal.lfilter(b,a,it)$/;"	v
response_i	rms_calc_01.py	/^response_i = signal.lfilter(b,a,it)$/;"	v
response_i	rms_calc_03.py	/^response_i = signal.lfilter(b,a,it)$/;"	v
response_v	rms_calc_01.py	/^response_v = signal.lfilter(b,a,vt)$/;"	v
response_v	rms_calc_03.py	/^response_v = signal.lfilter(b,a,vt)$/;"	v
resto	implementation_05_result_micro.py	/^            resto = acc & 0x00007FFF  #guardo los bits que voy a truncar                                                $/;"	v
resto	implementation_05_result_micro.py	/^resto = 0$/;"	v
ri	rms_calc_03.py	/^ri = np.arange(0, irms, 0.01)$/;"	v
rp	rms_calc_03.py	/^    rp = np.arange(0, (pact*-1), 0.01)$/;"	v
rp	rms_calc_03.py	/^    rp = np.arange(0, pact, 0.01)$/;"	v
rq	rms_calc_03.py	/^    rq = np.arange(0, (q*-1), 0.01)$/;"	v
rq	rms_calc_03.py	/^    rq = np.arange(0, q, 0.01)$/;"	v
rs	rms_calc_03.py	/^rs = np.arange(0, s, 0.01)$/;"	v
rv	rms_calc_03.py	/^rv = np.arange(0, vrms, 0.01)$/;"	v
s	PID_control_01.py	/^s = Symbol('s')$/;"	v
s	PID_control_02.py	/^s=2.0j*pi*f$/;"	v
s	PID_etapa_potencia_stretcher_01.py	/^s = Symbol('s')$/;"	v
s	Tfilter_sympy_01.py	/^s = Symbol('s')$/;"	v
s	dippolito_continuo_01.py	/^s = Symbol('s')$/;"	v
s	python_lowpass_demo.py	/^s=2.0j*pi*f$/;"	v
s	rms_calc_01.py	/^s = irms * vrms$/;"	v
s	rms_calc_03.py	/^s = irms * vrms$/;"	v
s	rms_calc_04.py	/^s = irms * vrms$/;"	v
s	saw_01.py	/^s = Symbol('s')$/;"	v
s	saw_02.py	/^s = Symbol('s')$/;"	v
s	saw_03.py	/^s = Symbol('s')$/;"	v
s	stretcher_caracterizacion_etapa_pot.py	/^s = Symbol('s')$/;"	v
s	stretcher_pid01.py	/^s = Symbol('s')$/;"	v
s	stretcher_pid02.py	/^s = Symbol('s')$/;"	v
s	sympy_test_03.py	/^s = Symbol('s')$/;"	v
saw	saw_01.py	/^saw = lti(num, den)$/;"	v
sawH	saw_02.py	/^sawH = lti(numH, denH)$/;"	v
sawH	saw_03.py	/^sawH = lti(numH, denH)$/;"	v
sawZ	saw_02.py	/^sawZ = lti(numZ, denZ)$/;"	v
sawZ	saw_03.py	/^sawZ = lti(numZ, denZ)$/;"	v
serial_string	datalogger.py	/^serial_string = ""$/;"	v
sp	PID_solo_KP_pulsos.py	/^sp = np.ones (100)$/;"	v
sp	PID_solo_KP_pulsos.py	/^sp = sp * 100$/;"	v
start_time	datalogger.py	/^start_time = time.time()$/;"	v
stepResponse	mat.py	/^def stepResponse(Ts,*args,**kwargs):$/;"	f
sumo_sistemas	tc_udemm.py	/^def sumo_sistemas(sys3, sys4):$/;"	f
sympy_to_lti	tc_udemm.py	/^def sympy_to_lti(xpr, s=sy.Symbol('s')):$/;"	f
sys_new	PID_control_07_pole_two_zero.py	/^sys_new = tf(b, a, True)$/;"	v
sys_new	PID_control_boost_dc_dc_01.py	/^sys_new = tf(b, a, True)$/;"	v
system	system_z01.py	/^system = num \/ den$/;"	v
t	PID_etapa_potencia_stretcher_01.py	/^t = np.linspace(0, 0.01, num=2000)$/;"	v
t	PID_solo_KP_pulsos.py	/^t = np.arange (0, np.size(sp), 1)$/;"	v
t	data_read_example.py	/^t=data[:,0]#t is the first column (column 0)$/;"	v
t	implementatio_01.py	/^t = np.arange (0, lenght * Ts, Ts)$/;"	v
t	implementation_02.py	/^t = np.arange (0, lenght * Ts, Ts)$/;"	v
t	implementation_03.py	/^t = np.arange (0, lenght * Ts, Ts)$/;"	v
t	implementation_04.py	/^t = np.arange (0, lenght * Ts, Ts)$/;"	v
t	implementation_05_result_micro.py	/^t = np.arange (0, lenght * Ts, Ts)$/;"	v
t	max_error.py	/^t = np.arange (0, lenght * Ts, Ts)$/;"	v
t	rms_calc_01.py	/^t = np.arange (0, lenght * Ts, Ts)$/;"	v
t	rms_calc_02.py	/^t = np.arange (0, lenght * Ts, Ts)$/;"	v
t	rms_calc_03.py	/^t = np.arange (0, lenght * Ts, Ts)$/;"	v
t	rms_calc_04.py	/^t = np.arange (0, lenght * Ts, Ts)$/;"	v
t	rms_calc_imple01.py	/^t = np.arange (0, lenght * Ts, Ts)$/;"	v
t	stretcher_caracterizacion_etapa_pot.py	/^t = np.arange (0, 0.1, td)$/;"	v
t	stretcher_caracterizacion_etapa_pot.py	/^t = np.linspace(0, 0.1, num=2000)$/;"	v
t	stretcher_pid01.py	/^t = np.linspace(0, 0.01, num=2000)$/;"	v
t	stretcher_pid01.py	/^t = np.linspace(0, 0.02, num=2000)$/;"	v
t	stretcher_pid01.py	/^t = np.linspace(0, 0.066, num=2000)$/;"	v
t	stretcher_pid01.py	/^t = np.linspace(0, 0.2, num=2000)$/;"	v
t	stretcher_pid02.py	/^t = np.linspace(0, 0.01, num=2000)$/;"	v
t	stretcher_pid02.py	/^t = np.linspace(0, 0.02, num=2000)$/;"	v
t	stretcher_pid02.py	/^t = np.linspace(0, 0.066, num=2000)$/;"	v
t	stretcher_pid02.py	/^t = np.linspace(0, 0.2, num=2000)$/;"	v
t	system_z01.py	/^t = np.arange (0, 100, 1)$/;"	v
t	vmax01.py	/^t = np.arange (0, length)$/;"	v
t2	discrete_esay_control_lib_02.py	/^t2 = T[0, :]$/;"	v
t_in	discrete_esay_02.py	/^t_in = [0.0, 1.0, 2.0, 3.0]$/;"	v
t_in	discrete_esay_03.py	/^t_in = [0.0, 1.0, 2.0, 3.0]$/;"	v
t_in	discrete_esay_control_lib_01.py	/^t_in = np.arange(0.0, 0.1, 0.001)$/;"	v
tf	discrete_esay_02.py	/^tf = (b, [1.0], 1.0)$/;"	v
tf	discrete_esay_03.py	/^tf = (b, [1.0], 1.0)$/;"	v
tf	discrete_esay_control_lib_01.py	/^tf = (b, [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 0.001)   #ver que dt coincida con el step de tiempo en discreto$/;"	v
tf	python_lowpass_demo.py	/^tf=p\/(s+p)$/;"	v
tf1	discrete_esay_control_lib_01.py	/^tf1 = (b, [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 0.001)   #ver que dt coincida con el step de tiempo en discreto$/;"	v
theta_i	rms_calc_03.py	/^theta_i = pi\/2.0$/;"	v
theta_i	rms_calc_04.py	/^theta_i = 0$/;"	v
theta_i	rms_calc_imple01.py	/^theta_i = 0$/;"	v
theta_ii	rms_calc_03.py	/^theta_ii = np.ones(ri.size)$/;"	v
theta_p	rms_calc_03.py	/^    theta_p = np.ones(rp.size)$/;"	v
theta_q	rms_calc_03.py	/^    theta_q = np.ones(rq.size)    $/;"	v
theta_q	rms_calc_03.py	/^    theta_q = np.ones(rq.size)$/;"	v
theta_s	rms_calc_03.py	/^theta_s = np.ones(rs.size)$/;"	v
theta_v	rms_calc_03.py	/^theta_v = 0.0$/;"	v
theta_v	rms_calc_04.py	/^theta_v = 0.0$/;"	v
theta_v	rms_calc_imple01.py	/^theta_v = pi\/8.0$/;"	v
theta_vv	rms_calc_03.py	/^theta_vv = np.ones(rv.size)$/;"	v
tin	discrete_esay_control_lib_03.py	/^tin = np.arange(0.0, 0.005, 0.0001)$/;"	v
tin	discrete_esay_control_lib_04_con_ALPHA.py	/^tin = np.arange(0.0, 0.005, 0.0001)$/;"	v
u	discrete_esay_02.py	/^u = np.asarray([0.0, 0.0, 1.0, 1.0])$/;"	v
u	discrete_esay_03.py	/^u = np.asarray([0.0, 0.0, 1.0, 1.0])$/;"	v
u	discrete_esay_control_lib_01.py	/^u = np.ones(np.size(t_in))$/;"	v
u	plot_zplane.py	/^    u = 1.0*(index==0)$/;"	v
u	stretcher_pid01.py	/^u = np.ones_like(t)$/;"	v
u	stretcher_pid02.py	/^u = np.ones_like(t)$/;"	v
vin	implementatio_01.py	/^vin = 2047 * sin(2*pi*fo*t) + 2048   #max excursion en el ADC$/;"	v
vin	implementation_02.py	/^vin = 2047 * sin(2*pi*fo*t) + 2048   #max excursion en el ADC$/;"	v
vin	implementation_03.py	/^vin = 2047 * sin(2*pi*fo*t) + 2048  #max excursion en el ADC OFFSET -50 (con correccion de continua += 369)$/;"	v
vin	implementation_04.py	/^vin = 2047 * sin(2*pi*fo*t) + 2048  #max excursion en el ADC OFFSET -50 (con correccion de continua += 369)$/;"	v
vin	implementation_05_result_micro.py	/^vin = 2047 * sin(2*pi*fo*t) + 2048  #max excursion en el ADC OFFSET -50 (con correccion de continua += 369)$/;"	v
vin_int	implementatio_01.py	/^vin_int = np.asanyarray(vin, 'int16') #paso de float a int16$/;"	v
vin_int	implementation_02.py	/^vin_int = np.asanyarray(vin, 'int16') #paso de float a int16$/;"	v
vin_int	implementation_03.py	/^vin_int = np.asanyarray(vin, 'int16') #paso de float a int16$/;"	v
vin_int	implementation_04.py	/^vin_int = np.asanyarray(vin, 'int16') #paso de float a int16$/;"	v
vin_int	implementation_05_result_micro.py	/^vin_int = np.asanyarray(vin, 'int16') #paso de float a int16$/;"	v
vmax	rms_calc_01.py	/^vmax = 1$/;"	v
vmax	rms_calc_02.py	/^vmax = 1$/;"	v
vmax	rms_calc_03.py	/^vmax = 1$/;"	v
vmax	rms_calc_04.py	/^vmax = 1$/;"	v
vmax	rms_calc_imple01.py	/^vmax = 312$/;"	v
vmax	vmax01.py	/^        vmax = vsense[i]$/;"	v
vmax	vmax01.py	/^vmax = 0$/;"	v
vmin	vmax01.py	/^        vmin = vsense[i]$/;"	v
vmin	vmax01.py	/^vmin = 0$/;"	v
vout	implementatio_01.py	/^vout = np.ones(lenght)$/;"	v
vout	implementation_02.py	/^vout = np.ones(lenght)$/;"	v
vout	implementation_03.py	/^vout = np.ones(lenght)$/;"	v
vout	implementation_04.py	/^vout = np.ones(lenght)$/;"	v
vout	implementation_05_result_micro.py	/^vout = np.ones(lenght)$/;"	v
vout_int	implementation_03.py	/^vout_int = np.ones(lenght, 'int32')$/;"	v
vout_int	implementation_04.py	/^vout_int = np.ones(lenght, 'int32')$/;"	v
vout_int	implementation_05_result_micro.py	/^vout_int = np.ones(lenght, 'int16')     #cambio a int16$/;"	v
vrms	rms_calc_01.py	/^vrms = sqrt(nv3)$/;"	v
vrms	rms_calc_03.py	/^vrms = sqrt(nv3)$/;"	v
vrms	rms_calc_04.py	/^vrms = sqrt(nv3)$/;"	v
vsense	vmax01.py	/^vsense = np.zeros(length)$/;"	v
vt	rms_calc_01.py	/^vt = vmax * sin(2*pi*50*t)$/;"	v
vt	rms_calc_02.py	/^vt = vmax * sin(2*pi*50*t)$/;"	v
vt	rms_calc_03.py	/^vt = vmax * sin(2*pi*50*t+theta_v)$/;"	v
vt	rms_calc_04.py	/^vt = vmax * sin(2*pi*freq*t+theta_v)$/;"	v
vt	rms_calc_imple01.py	/^vt = 1 * sin(2*pi*freq*t+theta_v)$/;"	v
vt_rect1	rms_calc_04.py	/^vt_rect1 = (vt - 0.1) * 1.11$/;"	v
vt_rect1	rms_calc_imple01.py	/^vt_rect1 = (vt - 0.1) * 1.11$/;"	v
vt_rect2	rms_calc_04.py	/^vt_rect2 = np.where(vt_rect1 < 0, 0, vt_rect1)$/;"	v
vt_rect2	rms_calc_imple01.py	/^vt_rect2 = np.where(vt_rect1 < 0, 0, vt_rect1)$/;"	v
vt_rect2	rms_calc_imple01.py	/^vt_rect2 = vt_rect2 * vmax$/;"	v
vt_rect3	rms_calc_imple01.py	/^vt_rect3 = np.uint16((vt_rect2 \/ 360.0) * 4095)$/;"	v
wp	rms_calc_01.py	/^wp = fpass \/ fsample$/;"	v
wp	rms_calc_02.py	/^wp = fpass \/ fsample$/;"	v
wp	rms_calc_03.py	/^wp = fpass \/ fsample$/;"	v
ws	rms_calc_01.py	/^ws = fstop \/ fsample$/;"	v
ws	rms_calc_02.py	/^ws = fstop \/ fsample$/;"	v
ws	rms_calc_03.py	/^ws = fstop \/ fsample$/;"	v
x	matplot.py	/^x = np.linspace(0, 10, 200)$/;"	v
x	max_error.py	/^x = arange(0,20)$/;"	v
x1	subplot.py	/^x1 = np.linspace(0.0, 5.0)$/;"	v
x2	subplot.py	/^x2 = np.linspace(0.0, 2.0)$/;"	v
y	data_read_example.py	/^y=data[:,1]#y is the second column (column 1)$/;"	v
y	matplot.py	/^y = np.sin(x)$/;"	v
y	plot_zplane.py	/^    y = lfilter(b, a, u)$/;"	v
y1	subplot.py	/^y1 = np.cos(2 * np.pi * x1) * np.exp(-x1)$/;"	v
y2	subplot.py	/^y2 = np.cos(2 * np.pi * x2)$/;"	v
y_out	Tfilter_sympy_02.py	/^y_out = yout[0]$/;"	v
yout	discrete_esay_control_lib_03.py	/^yout = yout0[:Tout.size]$/;"	v
yout	discrete_esay_control_lib_04_con_ALPHA.py	/^yout = yout0[:Tout.size]$/;"	v
yout	stretcher_caracterizacion_etapa_pot.py	/^yout = yout0[:tout.size]$/;"	v
yout	system_z01.py	/^yout = yout0[:tout.size]$/;"	v
yout0	discrete_esay_control_lib_03.py	/^yout0 = yout1[0]$/;"	v
yout0	discrete_esay_control_lib_04_con_ALPHA.py	/^yout0 = yout1[0]$/;"	v
yout0	stretcher_caracterizacion_etapa_pot.py	/^yout0 = yout1[0]$/;"	v
yout0	system_z01.py	/^yout0 = yout1[0]$/;"	v
yout1	discrete_esay_control_lib_03.py	/^yout1 = np.transpose(yout2)$/;"	v
yout1	discrete_esay_control_lib_04_con_ALPHA.py	/^yout1 = np.transpose(yout2)$/;"	v
yout1	stretcher_caracterizacion_etapa_pot.py	/^yout1 = np.transpose(yout)$/;"	v
yout1	system_z01.py	/^yout1 = np.transpose(yout)$/;"	v
z	PID_analog_to_PID_digital.py	/^z = Symbol('z')$/;"	v
z	pole_zero_placement_02.py	/^z = Symbol('z')$/;"	v
z	pole_zero_placement_03.py	/^z = Symbol('z')$/;"	v
z	pole_zero_placement_04.py	/^z = Symbol('z')$/;"	v
z	pruebo_print.py	/^z = 1 \/ 3$/;"	v
z	system_z01.py	/^z = Symbol('z')$/;"	v
zero_current	rms_calc_imple01.py	/^zero_current = 2048$/;"	v
zeroes	system_z01.py	/^zeroes = [0]$/;"	v
zeros	PID_control_03_analog.py	/^zeros = [100, 1000]$/;"	v
zeros	PID_etapa_potencia_stretcher_01.py	/^zeros = [-100 + 0.0j]	#zero en w = 100$/;"	v
zeros	stretcher_pid01.py	/^zeros = [-12560]$/;"	v
zeros	stretcher_pid02.py	/^zeros = [-100]$/;"	v
zplane	plot_zplane.py	/^def zplane(z, p, filename=None):$/;"	f
zplane	plot_zplane2.py	/^def zplane(b,a,filename=None):$/;"	f
